#include <stdio.h>
#include <stdlib.h>


int main() {
    // 포인터 변수

    int* a;  // a를 포인터 변수라고 선언
    *a = 10;  // a(라는 공간)의 값에 10을 선언

    printf("%d", a);  // a의 주소값을 출력  ==> 주소값
    printf("%d", *a);   // a의 주소값 안에 입력된 값을 출력 ==> 10



    int b = 10;   // b를 임의의 주소에 있는 공간에 10이라는 값을 선언
    int *a;   // a라는 포인터 변수를 만듦  -> a라는 포인터 변수의 공간이 만들어짐
    a = &b;   // b의 주소값을 a라는 공간에 선언  --> 주소값을 넣는 것  == b와 같은 주소를 가지고 있게 됨
    printf("%d\n", *a);   // a가 가지고 있는 주소가 가지고 있는 값 == b가 가지고 있는 주소가 가지고 있는 값 ==> 10
    printf("%d\n", b);    // b가 가지고 있는 값 (주소값 x) ==> 10 
    printf("%d\n", a);    // a의 값 ==> b의 주소값


    //문제 1
    int A = 10,B;  // A라는 변수에 10을 선언  , B를 따로 선언한것임 ,연산자 x
    int *C = &B;   // B의 주소값을 선언

    B = A--;   // 후위 연산자이므로 B에 10을 넣은 다음 1을 빼야되므로 A가 9, B가 10이 됨
    B += 20;   // B에 20을 더하므로 30이 된다.
    printf("%d", *C);   // C의 주소값에 들어가있는 숫자값을 출력해야하므로 30이 출력된다. ==> 30
    // C는 B의 주소값을 가지고 있고 그 주소값의 주소에 있는 변수 즉, B의 값을 출력하게 됨

    // 문제 2
    int i = 0;  // i라는 변수에 0을 선언
    int *p;     // p라는 주소를 가지는 변수 선언
    p = &i;     // p라는 주소를 가지는 변수에 i의 주소값을 선언  --> int *p 를 한번 선언하면 그 다음에는 *을 안 붙여야 됨

    // 문제 3
    int A = 10,B;
    int *C = &B;

    B = A--;
    B +=20;
    *C = A;  // C의 주소값에 있는 B의 값에 A의 값을 집어넣음

    printf("%d\n", *C);  // C의 주소값은 B의 값이므로 B는 9이다
    printf("%d\n", B);  // B의 값은 44열로 인해 A의 값으로 바꼈으므로 9가 출력됨

    // 문제 4
    int A = 10,B;
    int *C = &B;

    B = A--;
    B += 20;
    C = &A;   // A의 주소값을 C에 선언

    printf("%d\n", *C);   // 9 
    printf("%d\n", B);    // 30






    
    return 0;
}